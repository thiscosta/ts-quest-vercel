/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { Badge, Checkbox, FormControlLabel, TextField } from '@mui/material';
import { styled } from '@mui/material/styles';
import { TestcheckboxProps } from 'src/types';

 
const Testcheckbox1: any = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-end`,  
  padding: `44px 61px`,  
  boxSizing: `border-box`,  
  width: "100%",  
});
  
const CheckboxWrapper: any = styled("div")({  
  margin: `0px`,  
});
  
const TextFieldStandard: any = styled(TextField)({  
  width: `220px`,  
  margin: `0px 0px 0px 89px`,  
});
 
function Testcheckbox(props: TestcheckboxProps): JSX.Element {
  return (
    <Testcheckbox1 className={props.className} >
      <CheckboxWrapper id={"test"} aria-label={"test"}>
        <Badge  anchorOrigin={{vertical: 'top', horizontal: 'right'}} color={'primary'} invisible={false} variant={'standard'} badgeContent={20}>
        <FormControlLabel control={<Checkbox defaultChecked={false} size="medium" color="primary" />} label={`Label`} />
      </Badge>
      </CheckboxWrapper>
      <TextFieldStandard variant="standard" size="medium"  label={`Label`}    />
    </Testcheckbox1>
  );
}

export default Testcheckbox;
